{"version":3,"file":"static/js/907.a73c6358.chunk.js","mappings":"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","sources":["Components/Competitions/contestcard.js","Components/Competitions/EachContest.js","Components/Competitions/Main.jsx","Components/Competitions/Competition.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport { Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nfunction Card(props){\n    return(\n        <div className=\"contestcard\">\n            <div className=\"contestcard-content\">\n                <div className=\"imgBox\">\n                    {/* <img className=\"contactImage\" src={props.image} alt=\"img05\"  /> */}\n                </div>\n                <div className=\"contentBx\">\n                    <h3>\n                        {props.name}\n                        <br />\n                        <span>{props.title}</span>\n                    </h3>\n                </div>\n                <div className=\"buttonBx\">\n                    <Link to={`/competitions/details/${props.name.toLowerCase().replace(/\\s/g, \"\")}`}><Button variant=\"contained\" style={{margin: \"10px\"}}>Details</Button></Link>\n\t\t\t\t\t    <Link to={`/register/${props.name}`}><Button variant=\"contained\" style={{margin: \"10px\"}}>Register</Button></Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport './comps.css';\nimport comp from './images/comp1.png';\nimport {Tabs, Tab} from \"@mui/material\"\nfunction EachContest(props) {\n\tconst [tab, setTab] = useState(0);\n\t\n\tconst setCurrentTab = (event, newValue) => {\n\t\tsetTab(newValue);\n\t}\n\n  return (\n  \t<>\n    <div className=\"page-background each-page-background\" style={{}}><div className=\"comp-each-blob1\"></div></div>\n    <div className=\"comp-each-container\">\n      <div className=\"comp-each-card\">\n      <div className='comp-each-containerLeft'>\n        <h1 className=\"comp-each-title\">{props.compName}</h1>\n        <Tabs value={tab} onChange={setCurrentTab}>\n        \t<Tab value={0} label={\"About\"}/>\n        \t<Tab value={1} label={\"Structure\"}/>\n        \t<Tab value={2} label={\"Timeline\"}/>\n        \t<Tab value={3} label={\"FAQs\"}/>\n        </Tabs>\n        <div className=\"comp-each-data\">\n        \t{props.content[tab]}\n        </div>\n        {/*<p className=\"comp-each-subtitle\">Introducing the first ever 5G enabled tablet. You've got a tablet that lets you play harder and work smarter.</p>*/}\n        <button className=\"comp-each-btn\">Get Started</button>\n        </div>\n        <div className='comp-each-containerRight'>\n            <img style={{width:\"100%\", height:'100%', objectFit:\"contain\"}} className='comp-each-compImg' src={comp} />\n        </div>\n      </div>\n      <div className=\"comp-each-compReg\">\n       <button className=\"comp-each-glass-button\">Register</button><button className=\"comp-each-glass-button\">Problem Statement</button>\n      </div>\n    </div>\n    </>\n  );\n}\n\nEachContest.propTypes = {};\n\nexport default EachContest\n","import React, {useState, useEffect} from \"react\";\nimport { Grid, Button, Tab, Tabs } from \"@mui/material\";\nimport \"./styles.css\";\nimport comps from \"./competitions.json\";\nimport { Link, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport Card from \"./contestcard\";\nimport EachContest from \"./EachContest\";\n\nfunction Main({setThemeColor, setLowergridmenu, params, category, big}) {\n\n\tconst navigate = useNavigate();\n\tconst location = useLocation();\n\tlet current = 0;\n\tlet content = [];\n\tlet competitions = [];\n\tlet links = [];\n\tlet all_contests = [];\n\tfor (const category of comps) {\n\t\t\tfor (const contest of category.contests) {\n\t\t\t\tall_contests.push(...contest.explore);\n\t\t\t}\n\t}\n\t\n\tif (comps.map((el) => (el.category)).includes(category)) {\n\t\tcontent = [];\n\t\tcontent = comps.filter((el) => el.category === category)[0].contests;\n\t\tconsole.log(content);\n\t\tcompetitions = content.map((el) => {\n\t\t\tif (big) return (\n\t\t\t\t//<div className=\"main-text\">\n// \t\t\t\t<div style={{display:\"flex\", justifyContent:\"space-between\", margin:\"50px\", marginBottom:\"0px\"}} key={el.index}>\n// \t\t\t\t\t<div style={{maxWidth:\"60%\"}}>\n// \t\t\t\t\t<div style={{margin:\"50px\"}}>\n// \t\t\t\t\t<h1>{el.title}</h1>\n// \t\t\t\t\t<p>{el.text}</p>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<img src={`/images/${el.img}.svg`} alt={`Illustration for the ${el.title} competition`} style={{width:\"300px\"}} />\n// \t\t\t\t</div>\n// \t\t\t\t<div style={{display:\"flex\", flexWrap:\"wrap\", width:\"100%\"}}>\n// \t\t\t\t{el.explore.map((contest) => (\n// \t\t\t\t\t<div \n// \t\t\t\t\t\tstyle={{alignSelf:\"flex-start\",margin:\"10px\"}}\n// \t\t\t\t\t\tkey={contest.name}\n// \t\t\t\t\t>\n// \t\t\t\t\t<Card name={contest.name} title={contest.about}/>\n// \t\t\t\t\t</div>)\n// \t\t\t\t)}\n// \t\t\t\t</div>\n// \t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className=\"main-text\">\n\t\t\t\t\t<div style={{width: \"calc(100% - 550px)\", margin:\"50px\", marginBottom:\"10px\"}}>\n\t\t\t\t\t\t<h1>{el.title}</h1>\n\t\t\t\t\t\t<p>{el.text}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<img src={`/images/${el.img}.svg`} alt={`Illustration for the ${el.title} competition`} style={{width:\"300px\", float:\"right\", marginTop:\"8%\", marginRight:\"6%\"}} />\n\t\t\t\t\t\n\t\t\t\t\t{el.explore.map((contest) => (\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmargin:\"10px\",\n\t\t\t\t\t\t\t\tclear:\"right\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tkey={contest.name}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Card name={contest.name} title={contest.about}/>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t)}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t);\n\t\t\telse return (<div className=\"main-text-small\" style={{padding:\"20px\"}}>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>{el.title}</h1>\n\t\t\t\t\t<p>{el.text}</p>\n\t\t\t\t</div>\n\t\t\t\t{/*<img src={`/images/${el.img}.svg`} alt={`Illustration for the ${el.title} competition`} style={{width:\"300px\"}} />*/}\n\t\t\t\t<div style={{display:\"flex\", flexWrap:\"wrap\", alignSelf:\"center\", justifyContent:\"center\"}}>\n\t\t\t\t{el.explore.map((contest) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{alignSelf:\"center\",margin:\"10px\"}}\n\t\t\t\t\t\tkey={contest.name}\n\t\t\t\t\t>\n\t\t\t\t\t<Card name={contest.name} title={contest.about}/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>);\n\t\t});\n\t\tconsole.log(competitions);\n\t\tlinks = content.map((el) => {\n\t\t\treturn (\n\t\t\t\t<Link \n\t\t\t\t\tto={`/competitions/${category.toLowerCase()}/${el.title.toLowerCase().replace(/\\s/g, '')}`}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcursor:\"pointer\",\n\t\t\t\t\t\tmarginLeft:\"20px\",\n\t\t\t\t\t\tmarginRight:\"20px\",\n\t\t\t\t\t\tflexShrink:\"0\",\n\t\t\t\t\t\tpadding:\"5px\"\n\t\t\t\t\t}}\n\t\t\t\t\tkey={el.title}\n\t\t\t\t>\n\t\t\t\t<Tab value={content.indexOf(el)} label={el.title} />\n\t\t\t\t</Link>\n\t\t\t);\n\t\t});\n\t} else if (category === \"Details\" && (all_contests.map(el => el.name.toLowerCase().replace(/\\s/g, \"\")).includes(params))) { //path: /competitons/details/params\n\t\tcontent.push({color:\"#000\"});\n\t\tlet contestobj = all_contests.find(el => (el.name.toLowerCase().replace(/\\s/g, \"\") === params));\n\t\tcompetitions = [];\n\t\tcompetitions.push(<EachContest compName={contestobj.name} content={[contestobj.about,\"lollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollollol\",\"haha\",\"rip\"]}/>);\n\t\t\n\t\t\n\t\t\n\t} else { //path: /competitons/ OR /competitions/details/\n\t\tcontent.push({color:\"#000\"});\n\t\tcompetitions.push(<div className=\"main-text\">\n\t\t    <img id=\"myVideo\" src = \"background.gif\"></img>\n\t\t\t<div className=\"containercomp\">\n\t\t\t  <div className=\"contest-main-card\">\n\t\t\t\t<div className=\"contest-main-face contest-main-face1\">\n\t\t\t\t  <div className=\"contest-main-content\">\n\t\t\t\t\t<p className=\"contest-main\" style={{backgroundColor:\"#fffc00\"}}>Java is a class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible.</p>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"contest-main-face contest-main-face2\">\n\t\t\t\t  <h2>TECHNICAL</h2>\n\t\t\t\t</div>\n\t\t\t  </div>\n\n\t\t\t  <div className=\"contest-main-card\">\n\t\t\t\t<div className=\"contest-main-face contest-main-face1\">\n\t\t\t\t  <div className=\"contest-main-content\">\n\t\t\t\t\t<p className=\"contest-main\" style={{backgroundColor:\"#00fffc\"}}>Python is an interpreted, high-level and general-purpose programming language.</p>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"contest-main-face contest-main-face2\">\n\t\t\t\t  <h2>ENTREPRENEURIAL</h2>\n\t\t\t\t</div>\n\t\t\t  </div>\n\n\t\t\t  <div className=\"contest-main-card\">\n\t\t\t\t<div className=\"contest-main-face contest-main-face1\">\n\t\t\t\t  <div className=\"contest-main-content\">\n\t\t\t\t\t<p className=\"contest-main\" style={{backgroundColor:\"#fc00ff\"}}>C# is a general-purpose, multi-paradigm programming language encompassing static typing, strong typing, lexically scoped and component-oriented programming disciplines.</p>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"contest-main-face contest-main-face2\">\n\t\t\t\t  <h2>MISCELLANEOUS</h2>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</div>);\n\t}\n\t\n\t\n\t\n\t\t\n\tif (params && (comps.map((el) => (el.category)).includes(category)) && content.findIndex((el) => (el.title.toLowerCase().replace(/\\s/g, '') === params)) > 0) {\n\t\tcurrent = content.findIndex((el) => (el.title.toLowerCase().replace(/\\s/g, '') === params));\t\n\t} else current = 0;\n\n\n\n\t//on anything: set lowergridmenu to what it needs to be\n\tuseEffect(() => {\n\t\tconst lowergridmenu = comps.map((el) => {\n\t\t\treturn {\n\t\t\t\ttext:el.category,\n\t\t\t\tlink:`competitions/${el.category.toLowerCase()}`\n\t\t\t}\n\t\t});\n\t\tsetLowergridmenu(lowergridmenu);\n\t\tsetThemeColor(content[current].color);\n\t\tconsole.log(\"setting lowergridmenu\");\n\t}, [location]);\n\t\n\tconst setSlide = (number) => {\n\t\tcurrent = number;\n\t}\n\t\n\n  return (\n  \t\t<>\n          <div className=\"main-container\">\n            {competitions[current]}\n          {comps.map((el) => (el.category)).includes(category)\n          ? <Tabs\n          \t\tstyle={{\n          \t\t\twidth:\"100%\", \n          \t\t\tmaxHeight: \"60px\", \n          \t\t\tmarginLeft:\"10px\", \n          \t\t\tmarginRight: \"10px\", \n          \t\t\tborderTop:\"solid 1px #fff\"\n          \t\t}} \n          \t\tvariant=\"scrollable\" \n          \t\tvalue={current}\n          \t>\n          \t\t{links}\n          \t</Tabs>\n          \t: \"\"}\n          </div>\n        </>\n    //     {/* </Grid>\n    //   </Grid>\n    // </div> */}\n  );\n}\n\nexport default Main;","import React from \"react\";\n\nimport Main from \"./Main\";\nimport \"./styles.css\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Competition(props) {\n\tconst {params} = useParams();\n  return (\n    <>\n      <Main {...props} params={params} />\n      \n      </>\n  );\n}\n\nexport default Competition;"],"names":["props","className","name","title","to","toLowerCase","replace","Button","variant","style","margin","useState","tab","setTab","compName","Tabs","value","onChange","event","newValue","Tab","label","content","width","height","objectFit","src","comp","setThemeColor","setLowergridmenu","params","category","big","location","useNavigate","useLocation","current","competitions","links","all_contests","comps","contests","contest","push","explore","el","includes","console","log","map","marginBottom","text","img","alt","float","marginTop","marginRight","clear","about","padding","display","flexWrap","alignSelf","justifyContent","cursor","marginLeft","flexShrink","indexOf","color","contestobj","find","id","backgroundColor","findIndex","useEffect","lowergridmenu","link","maxHeight","borderTop","useParams"],"sourceRoot":""}